{"type":{"desc":"<p>Set the scale type to <code class=\"codespan\">quantile</code></p>\n<!-- Syntax Element: data, DataSpec -->\n"},"domain":{"desc":"<p>Set the domain of the <code class=\"codespan\">scale</code>, supporting two formats of settings:</p>\n<ul>\n<li>Object type, with the specific type definition as follows:</li>\n</ul>\n<pre><code class=\"lang-ts\">{\n  data: string | IData;\n  field: string | string[];\n  sort?: (datumA: any, datumB: any) =&gt; number\n}\n</code></pre>\n<ul>\n<li>Custom function type, with the specific type definition as follows:</li>\n</ul>\n<pre><code class=\"lang-ts\">(scale: IBaseScale, parameters: any) =&gt; any;\n</code></pre>\n<!-- Syntax elements data, DataSpec -->\n"},"range":{"desc":"<p>Set the <code class=\"codespan\">scale</code> value domain, which can be coordinates, colors, or other content</p>\n<p>There are three supported formats:</p>\n<ul>\n<li>Object type, setting the <code class=\"codespan\">range</code> value by parsing specific data, with the specific type defined as follows:</li>\n</ul>\n<pre><code class=\"lang-ts\">{\n  data: string | IData;\n  field: string | string[];\n  sort?: (datumA: any, datumB: any) =&gt; number\n}\n</code></pre>\n<ul>\n<li>Custom function type, with the specific type defined as follows:</li>\n</ul>\n<pre><code class=\"lang-ts\">(scale: IBaseScale, parameters: any) =&gt; any;\n</code></pre>\n<ul>\n<li>Object type, setting the <code class=\"codespan\">range</code> value by binding with an axis of the coordinate system. In this case, the <code class=\"codespan\">range</code> corresponds to the coordinate range of a certain axis of the coordinate system. The specific configuration is as follows:</li>\n</ul>\n<pre><code class=\"lang-ts\">{\n  coordinate: string;\n  dimension: &#39;x&#39; | &#39;y&#39;;\n  isSubshaft?: boolean;\n  reversed?: boolean\n}\n</code></pre>\n"}}