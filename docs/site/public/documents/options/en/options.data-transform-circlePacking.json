{"type":{"desc":"<p>Set the data transformation type to <code class=\"codespan\">circlePacking</code> for calculating <code class=\"codespan\">circlePacking</code> layout</p>\n"},"nodeSort":{"desc":"<p>Set the sorting of nodes, supporting two formats:</p>\n<ul>\n<li><code class=\"codespan\">boolean</code> type: When the value is <code class=\"codespan\">false</code>, no sorting is performed; otherwise, the default sorting method is used, which is to sort the nodes by <code class=\"codespan\">value</code> from large to small;</li>\n<li><code class=\"codespan\">Function</code> type: Customize the sorting function, which takes two node data and returns a number. The corresponding type definition is:</li>\n</ul>\n<pre><code class=\"lang-ts\">(a: CirclePackingNodeElement, b: CirclePackingNodeElement) =&gt; number;\n</code></pre>\n"},"padding":{"desc":"<p>Type: <code class=\"codespan\">number|number[]</code>\nRequired: No</p>\n<p>Set the spacing between circles, supporting two formats:</p>\n<ul>\n<li><code class=\"codespan\">number</code> Set a uniform padding for circles at all levels</li>\n<li><code class=\"codespan\">number[]</code> Set different paddings for circles at each level</li>\n</ul>\n"},"setRadius":{"desc":"<p>Customize the setting of the radius for each node. The function takes a single node data and returns a radius value. The corresponding type definition is:</p>\n<pre><code class=\"lang-ts\">(node: CirclePackingNodeElement) =&gt; number;\n</code></pre>\n<p>The default value is:</p>\n<pre><code class=\"lang-ts\">(node: CirclePackingNodeElement) =&gt; {\n  return Math.sqrt(node.value);\n};\n</code></pre>\n"},"nodeKey":{"desc":"<p>Type: <code class=\"codespan\">string|number</code></p>\n<p>Set the field corresponding to the globally unique key of the node. If not set, it will be generated internally based on the level and other information.</p>\n"},"includeRoot":{"desc":"<p>Whether to include the root node</p>\n"}}