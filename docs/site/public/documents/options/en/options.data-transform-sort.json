{"type":{"desc":"<p>Set the type of data transformation to <code class=\"codespan\">sort</code></p>\n"},"sort(Object | Function)":{"desc":"<p>Sorting configuration, supporting two types of configurations:</p>\n<ul>\n<li>Object type, supported formats are as follows:</li>\n</ul>\n<pre><code class=\"lang-ts\">/**\n * the type of sort\n */\ntype SortOrderType = &#39;desc&#39; | &#39;asc&#39;;\n\n/**\n * config of sort\n */\ninterface SortConfigSpec {\n  /** the field to be sort */\n  field: string | string[];\n  /**\n   * the order of each field\n   */\n  order?: SortOrderType | SortOrderType[];\n}\n</code></pre>\n<p>In the simplest scenario, if you need to sort according to a certain field, you can configure as follows:</p>\n<pre><code class=\"lang-ts\">{\n  data: [\n    {\n      id: &#39;table&#39;,\n      data: [\n        { categary: &#39;A&#39;, value: 10, value2: 33 },\n        { categary: &#39;B&#39;, value: 15, value2: 22 },\n        { categary: &#39;C&#39;, value: 20, value2: 444 }\n      ],\n      transform: [\n        {\n          type: &#39;sort&#39;,\n          sort: { field: &#39;value&#39; }\n        }\n      ]\n    }\n  ];\n}\n</code></pre>\n<p>When <code class=\"codespan\">order</code> is not declared, the default value is <code class=\"codespan\">asc</code>, which is ascending order</p>\n<p>If you want to sort by multiple fields, just set <code class=\"codespan\">field</code> and <code class=\"codespan\">order</code> to array types</p>\n<ul>\n<li>Function type, used to set custom sorting functions</li>\n</ul>\n<pre><code class=\"lang-ts\">(a: any, b: any) =&gt; number;\n</code></pre>\n"}}