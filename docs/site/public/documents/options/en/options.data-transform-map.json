{"type":{"desc":"<p>Type of transformation</p>\n"},"callback":{"desc":"<p>The callback function to perform the transformation. The callback function will receive two parameters</p>\n<p><code class=\"codespan\">callback</code> can accept two parameters, the first parameter is the data object, and the second parameter is the syntax element <code class=\"codespan\">data</code> dependent on the parameters,</p>\n<p>In the following example, the data depends on the <code class=\"codespan\">test</code> signal</p>\n<pre><code>{\n  signals: [{\n    id: &#39;test&#39;,\n    value: 0,\n  }],\n  data: [\n    {\n      id: &#39;table&#39;,\n      values: [\n        { a: 1, b: 3, c: 5 },\n      ]\n    },\n    {\n      id: &#39;filter&#39;,\n      source: &#39;table&#39;,\n      dependency: [&#39;test&#39;],\n      transform: [\n        {\n          type: &#39;filter&#39;,\n          callback: (datum, params) =&gt; {\n            return data.a &gt; params.test;\n          },\n        }\n      ]\n    }\n  ]\n}\n\n</code></pre>"},"as":{"desc":"<p>Perform a transformation for each element in the array, and set the result of the transformation to the key declared by <code class=\"codespan\">as</code></p>\n"},"all":{"desc":"<p>Whether to get the entire data and perform a custom transformation. By default, the transformation is performed on a specific element in the array.</p>\n"}}