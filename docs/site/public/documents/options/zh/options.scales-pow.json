{"type":{"desc":"<p>设置刻度类型为 <code class=\"codespan\">pow</code></p>\n"},"exponent":{"desc":"<p>设置指数函数的指数</p>\n<p>支持两种格式的设置方式</p>\n<ul>\n<li><code class=\"codespan\">number</code> 类型</li>\n<li><code class=\"codespan\">function</code> 类型，通过自定义函数计算结果，函数的 ts 类型定义为：</li>\n</ul>\n<pre><code>(scale: IBaseScale, parameters: any) =&gt; number;\n</code></pre><p>其中 <code class=\"codespan\">parameters</code> 为该 scale 语法元素依赖的其他语法元素</p>\n<!-- 语法元素 data, DataSpec -->\n"},"domain":{"desc":"<p>设置<code class=\"codespan\">scale</code>的定义域，支持两种格式的设置：</p>\n<ul>\n<li>对象类型，具体类型定义如下：</li>\n</ul>\n<pre><code class=\"lang-ts\">{\n  data: string | IData;\n  field: string | string[];\n  sort?: (datumA: any, datumB: any) =&gt; number\n}\n</code></pre>\n<ul>\n<li>自定义函数类型，具体的类型定义如下：</li>\n</ul>\n<pre><code class=\"lang-ts\">(scale: IBaseScale, parameters: any) =&gt; any;\n</code></pre>\n<!-- 语法元素 data, DataSpec -->\n"},"range":{"desc":"<p>设置<code class=\"codespan\">scale</code>的值域，可以是坐标，也可以颜色，或者其他的内容</p>\n<p>支持的格式有三种：</p>\n<ul>\n<li>对象类型，通过解析某个数据，来设置<code class=\"codespan\">range</code>的值，具体类型定义如下：</li>\n</ul>\n<pre><code class=\"lang-ts\">{\n  data: string | IData;\n  field: string | string[];\n  sort?: (datumA: any, datumB: any) =&gt; number\n}\n</code></pre>\n<ul>\n<li>自定义函数类型，具体的类型定义如下：</li>\n</ul>\n<pre><code class=\"lang-ts\">(scale: IBaseScale, parameters: any) =&gt; any;\n</code></pre>\n<ul>\n<li>对象类型，通过和坐标系的某个轴进行绑定，来设置<code class=\"codespan\">range</code>的值，这种情况，<code class=\"codespan\">range</code>对应的是坐标系某个轴的坐标范围，具体的配置如下：</li>\n</ul>\n<pre><code class=\"lang-ts\">{\n  coordinate: string;\n  dimension: &#39;x&#39; | &#39;y&#39;;\n  isSubshaft?: boolean;\n  reversed?: boolean\n}\n</code></pre>\n<!-- 语法元素 data, DataSpec -->\n"},"nice":{"desc":"<p>对于 scale，计算出优化后的刻度，根据刻度值，来更新<code class=\"codespan\">domain</code>，支持多种值：</p>\n<ul>\n<li><code class=\"codespan\">boolean</code>：<code class=\"codespan\">true</code>表示自动计算，<code class=\"codespan\">false</code>表示不进行优化</li>\n<li><code class=\"codespan\">number</code>：表示优化后的刻度个数</li>\n</ul>\n<!-- 语法元素 data, DataSpec -->\n"},"niceMin":{"desc":"<p>只对<code class=\"codespan\">domain</code>的最小值进行优化，最大值不变，支持多种值：</p>\n<ul>\n<li><code class=\"codespan\">boolean</code>：<code class=\"codespan\">true</code>表示自动计算，<code class=\"codespan\">false</code>表示不进行优化</li>\n<li><code class=\"codespan\">number</code>：表示优化后的刻度个数</li>\n</ul>\n"},"niceMax":{"desc":"<p>只对<code class=\"codespan\">domain</code>的最大值进行优化，最小值不变，支持多种值：</p>\n<ul>\n<li><code class=\"codespan\">boolean</code>：<code class=\"codespan\">true</code>表示自动计算，<code class=\"codespan\">false</code>表示不进行优化</li>\n<li><code class=\"codespan\">number</code>：表示优化后的刻度个数</li>\n</ul>\n<!-- 语法元素 data, DataSpec -->\n"},"zero":{"desc":"<p>对于 scale，根据数据计算出一个原始的值域，也就是<code class=\"codespan\">domain</code>，然后在如下两种情况下，更新<code class=\"codespan\">domain</code>的值：</p>\n<ul>\n<li>如果最小值大于<code class=\"codespan\">0</code>，将<code class=\"codespan\">domain</code>的最小值设置为<code class=\"codespan\">0</code></li>\n<li>如果最大值小于<code class=\"codespan\">0</code>，将<code class=\"codespan\">domain</code>的最大值设置为<code class=\"codespan\">0</code></li>\n</ul>\n<p>当用户非常关心<code class=\"codespan\">0</code>这个基准值的时候，可以设置为<code class=\"codespan\">true</code>，默认为<code class=\"codespan\">false</code>。</p>\n"},"min":{"desc":"<p>根据数据计算出一个原始的值域，也就是<code class=\"codespan\">domain</code>，如果最小值大于用户配置的<code class=\"codespan\">min</code>，将<code class=\"codespan\">domain</code>的最小值设置为<code class=\"codespan\">min</code></p>\n"},"max":{"desc":"<p>根据数据计算出一个原始的值域，也就是<code class=\"codespan\">domain</code>，如果最大值大于用户配置的<code class=\"codespan\">max</code>，将<code class=\"codespan\">domain</code>的最大值设置为<code class=\"codespan\">max</code></p>\n"},"roundRange":{"desc":"<p>是否对值域自动取整</p>\n"},"config":{"desc":"<p><code class=\"codespan\">scale</code>的配置项</p>\n"},"config.clamp":{"desc":"<p>clamp 的值域</p>\n"},"config.interpolate":{"desc":"<p>差值函数</p>\n"}}