{"type":{"desc":"<p>将数据变换的类型设置为<code class=\"codespan\">sort</code></p>\n"},"sort(Object | Function)":{"desc":"<p>排序配置，支持两种类型的配置：</p>\n<ul>\n<li>Object 类型，支持的格式如下：</li>\n</ul>\n<pre><code class=\"lang-ts\">/**\n * the type of sort\n */\ntype SortOrderType = &#39;desc&#39; | &#39;asc&#39;;\n\n/**\n * config of sort\n */\ninterface SortConfigSpec {\n  /** the field to be sort */\n  field: string | string[];\n  /**\n   * the order of each field\n   */\n  order?: SortOrderType | SortOrderType[];\n}\n</code></pre>\n<p>最简单的场景，需要根据某个字段排序，可以如下配置：</p>\n<pre><code class=\"lang-ts\">{\n  data: [\n    {\n      id: &#39;table&#39;,\n      data: [\n        { categary: &#39;A&#39;, value: 10, value2: 33 },\n        { categary: &#39;B&#39;, value: 15, value2: 22 },\n        { categary: &#39;C&#39;, value: 20, value2: 444 }\n      ],\n      transform: [\n        {\n          type: &#39;sort&#39;,\n          sort: { field: &#39;value&#39; }\n        }\n      ]\n    }\n  ];\n}\n</code></pre>\n<p><code class=\"codespan\">order</code> 未申明的时候，默认值为<code class=\"codespan\">asc</code>，也就是升序</p>\n<p>如果要按照多个字段排序，只需要将<code class=\"codespan\">field</code>和<code class=\"codespan\">order</code>,设置为数组类型即可</p>\n<ul>\n<li>Function 类型，用于设置自定义的排序函数</li>\n</ul>\n<pre><code class=\"lang-ts\">(a: any, b: any) =&gt; number;\n</code></pre>\n"}}