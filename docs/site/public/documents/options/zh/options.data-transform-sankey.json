{"type":{"desc":"<p>将数据变换类型设置为 <code class=\"codespan\">sankey</code>，用于计算 sankey 布局</p>\n"},"direction":{"desc":"<p>桑基图的布局方向，默认值为水平方向，可选值为：</p>\n<ul>\n<li><code class=\"codespan\">&#39;horizontal&#39;</code> 将布局方向设置为水平方向</li>\n<li><code class=\"codespan\">&#39;vertical&#39;</code> 将布局方向设置为垂直方向</li>\n</ul>\n"},"nodeAlign":{"desc":"<p>设置同一层级中，节点的对齐方式，可选值为：</p>\n<ul>\n<li><code class=\"codespan\">&#39;left&#39;</code> 如果布局方向为水平方向，节点左对齐，如果布局方向为垂直方向，节点顶部对齐</li>\n<li><code class=\"codespan\">&#39;right&#39;</code> 如果布局方向为水平方向，节点右对齐，如果布局方向为垂直方向，节点底部对齐</li>\n<li><code class=\"codespan\">&#39;center&#39;</code> 节点居中对齐</li>\n<li><code class=\"codespan\">&#39;justify&#39;</code> 节点两端对齐</li>\n<li><code class=\"codespan\">&#39;start&#39;</code> 和<code class=\"codespan\">&#39;left&#39;</code>相同的含义</li>\n<li><code class=\"codespan\">&#39;end&#39;</code> 和<code class=\"codespan\">&#39;right&#39;</code>相同的含义</li>\n</ul>\n"},"nodeGap":{"desc":"<p>设置同一层级中，节点之间的间隔大小</p>\n"},"nodeWidth":{"desc":"<p>设置节点的宽度，如果布局方向为垂直布局，则这个值对应的是节点的高度，支持三种类型的值</p>\n<ul>\n<li><ol>\n<li><code class=\"codespan\">string</code> 百分比字符串，例如：{ nodeWidth: &#39;12%&#39; }</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li><code class=\"codespan\">number</code> 简单数字，单位为 px，例如：{ nodeWidth: 20 }</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li><code class=\"codespan\">function</code> 函数，自定义计算节点宽度</li>\n</ol>\n</li>\n</ul>\n"},"linkWidth":{"desc":"<p>指定节点之间的连边的宽度，单位为<code class=\"codespan\">px</code>；如果布局方向为垂直布局，则这个值对应的是连边的高度；\n这个值可以不设置，不设置的时候，会根据层级的个数自动计算出一个合适的值</p>\n"},"minStepWidth":{"desc":"<p>每一层对应的最小宽度（= 单个节点的宽度+单个连边的宽度）；如果布局为垂直布局，则这个值对应的是高度；\n如果不设置，则会根据节点的个数自动计算出一个合适的值；\n用于特殊的布局场景，建议如果设置了这个属性，在图形展示的时候配合滚动条一起使用</p>\n"},"minNodeHeight":{"desc":"<p>对于数据非空的节点，设置节点的最小高度，单位为<code class=\"codespan\">px</code>；如果布局为垂直布局，则这个值对应的是宽度；</p>\n<p>这个配置主要解决当数据非常小的时候，节点的高度会非常小，导致节点无法被看到的问题；</p>\n<p>建议这个值不要设置的太大，一般不要超过 <code class=\"codespan\">5</code></p>\n"},"minLinkHeight":{"desc":"<p>设置连边的最小高度，单位为<code class=\"codespan\">px</code>；如果布局为垂直布局，则这个值对应的是宽度；\n这个配置主要解决当数据非常小的时候，连边的高度会非常小，导致连边无法被看到的问题；\n建议这个值不要设置的太大，一般不要超过 <code class=\"codespan\">5</code>\n可以和<code class=\"codespan\">minNodeHeight</code>配合使用;建议这个值要小于<code class=\"codespan\">minNodeHeight</code>设置的值</p>\n"},"iterations":{"desc":"<p>设置布局计算的迭代次数，迭代的次数越多，布局计算的结果越精确，但是计算的时间也会越长</p>\n"},"nodeKey":{"desc":"<p>类型：<code class=\"codespan\">string|number</code>\n设置节点的全局唯一 key 对应的字段，如果不设置，内部会根据层级等信息自动生成</p>\n"},"linkSortBy":{"desc":"<p>设置边的排序函数，如果不设置，不对边相关的数据，进行任何排序</p>\n"},"nodeSortBy":{"desc":"<p>设置节点的排序函数，如果不设置，不对节点的数据，进行任何排序</p>\n"},"setNodeLayer":{"desc":"<p>自定义设置节点最终展示在第几层级，默认不需要设置，只有特殊的定制化的需求，需要设置</p>\n"}}